@using PagedList
@using PagedList.Mvc
@model PagedList.IPagedList<Site.Models.vw_suprimentos2>

<div class="card-header card-header-primary">
    <div class="row">
        <div class="col-md-6" style="text-align:start"><h2>Relatorio de Suprimentos</h2></div>
        <div class="col-md-6" style="text-align:end">
            <button class="btn btn-secondary" disabled>Exportar</button>
            <button class="btn btn-secondary" id="VisualizarFaturamento" onclick="">Visualizar</button>
        </div>
    </div>
</div>

<div class="card-body">
    <table class="table table-hover table-striped" style="text-align:center">
        <tr>
            
            <th>
                @Html.DisplayNameFor(model => model.First().Cod)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Ambiente)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Fila)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().serie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ip)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.First().Toner)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.First().Cilindro)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.First().DataUltimaLeitura)
            </th>
            
            

        </tr>

        @foreach (var item in Model)
        {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Cod)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ambiente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fila)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.serie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ip)
            </td>
            
            <td >
                <table class="table table-hover table-striped" style="text-align:center">
                    <thead>
                        <tr>
                            <th>Toner K</th>
                            <th>Toner C</th>
                            <th>Toner M</th>
                            <th>Toner Y</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped bg-dark progress-bar-animated" role="progressbar" style="width:@Html.DisplayFor(modelItem => item.Toner)%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Toner)</div>
                                    </div>
                            </td>
                            <td>
                                <div class="progress">
                                    <div class="progress-bar progress-bar-striped  bg-primary progress-bar-animated" role="progressbar" style="background-color:magenta;opacity: 0.7;width:@Html.DisplayFor(modelItem => item.Toner)%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Toner)</div>
                                </div>
                            </td>
                            <td>
                               
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="background-color:magenta;opacity: 0.7;width:@Html.DisplayFor(modelItem => item.Toner)%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Toner)</div>
                                    </div>
                            </td>
                            <td>
                                    <div class="progress">
                                        <div class="progress-bar progress-bar-striped bg-warning progress-bar-animated" role="progressbar" style="width:@Html.DisplayFor(modelItem => item.Toner)%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Toner)</div>
                                    </div>
                            </td>
                        </tr>

                    </tbody>
                </table>
                @*@Html.DisplayFor(modelItem => item.Toner)*@
            </td>
            
            <td>
                @if (!item.Cilindro.Equals(null))
                {
                    if (item.Cilindro.Value <= 10)
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped bg-danger progress-bar-animated" role="progressbar" style='width:@Html.DisplayFor(modelItem => item.Cilindro.Value)%' aria-valuenow="100" aria-valuemin="-1" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Cilindro)</div>
                        </div>
                    }
                    else if (item.Cilindro.Value > 10 && item.Cilindro.Value <= 30)
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped bg-warning progress-bar-animated" role="progressbar" style='width:@Html.DisplayFor(modelItem => item.Cilindro.Value)%' aria-valuenow="75" aria-valuemin="-1" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Cilindro)</div>
                        </div>
                    }
                    else
                    {
                        <div class="progress">
                            <div class="progress-bar progress-bar-striped bg-success progress-bar-animated" role="progressbar" style="width:@item.Cilindro.Value.ToString("0,0")%" aria-valuenow="25" aria-valuemin="-1" aria-valuemax="100">@Html.DisplayFor(modelItem => item.Cilindro)</div>
                        </div>
                    }
                }

                @*@Html.DisplayFor(modelItem => item.Cilindro)*@
            </td>
            <td>
                @if (!item.DataUltimaLeitura.Equals(null))
                {
                    @item.DataUltimaLeitura.Value.ToString("dd/MM/yyyy")
                }

                @*@Html.DisplayFor(modelItem => item.DataUltimaLeitura,Html)*@
            </td>
            


        </tr>
        }

    </table>
    <div class="row">
        <div class="col-md-12">
            <nav>

                @Html.PagedListPager(Model, pageRelatSupri => Url.Action("Index", new { pageRelatSupri }),
               new PagedListRenderOptions {
                   MaximumPageNumbersToDisplay = 5,
                   LinkToLastPageFormat = "Última",
                   LinkToFirstPageFormat = "Inicial",
                   LinkToPreviousPageFormat = "Anterior",
                   LinkToNextPageFormat= "Próxima",
                   UlElementClasses = new List<string>{ "pagination justify-content-center" },
                   LiElementClasses =  new List<string> { "page-item" },
                   ContainerDivClasses = new List<string> {""}
               })

            </nav>
        </div>
    </div>
</div>

   
